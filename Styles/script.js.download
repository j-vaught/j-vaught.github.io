// usage: log('inside coolFunc', this, arguments);
// paulirish.com/2009/log-a-lightweight-wrapper-for-consolelog/
window.log = function(){
  log.history = log.history || [];   // store logs to an array for reference
  log.history.push(arguments);
  if(this.console) {
    arguments.callee = arguments.callee.caller;
    var newarr = [].slice.call(arguments);
    (typeof console.log === 'object' ? log.apply.call(console.log, console, newarr) : console.log.apply(console, newarr));
  }
};

// make it safe to use console.log always
(function(b){function c(){}for(var d="assert,count,debug,dir,dirxml,error,exception,group,groupCollapsed,groupEnd,info,log,timeStamp,profile,profileEnd,time,timeEnd,trace,warn".split(","),a;a=d.pop();){b[a]=b[a]||c}})((function(){try
{console.log();return window.console;}catch(err){return window.console={};}})());


// place any jQuery/helper plugins in here, instead of separate, slower script files.
// Fireup the plugins
$(document).ready(function(){

	// Initialize the mobile nav
    var $mobileMenu = $('#sidr');
    $mobileMenu.css("display", "none");
    $('.menu-btn-mobile').on('click', function() {
        $mobileMenu.toggleClass('is-open');
        $mobileMenu.stop().animate({right: '0px'}, 500, 'linear');
        if ( $mobileMenu.hasClass('is-open') ) {
            var $sidr = $('.sidr-inner'),
                $selected = $('.mobile-nav .selected');

            $mobileMenu.css("display", "block");
            // Open parent ULs to show user navigation path on mobile nav
            $selected.parents('ul').show().prev('span').toggleClass("plus minus");
            // Scroll to selected item
            $sidr.scrollTop(0).scrollTop( ( $selected.offset().top - $sidr.offset().top ) - $(window).height() / 2);
        } else {
            closeMobileMenu();
        }
    })
	
	// Close mobile menu when escape key is pressed
	$(document).on('keydown', function(event) {
	   if (event.key == "Escape") {
		   closeMobileMenu();
	   }
	});
	
	// Close mobile menu
	function closeMobileMenu() {
		$mobileMenu.stop().animate({right: '-1000px'}, 500, 'linear', function() {
			$mobileMenu.css("display", "none");
		});
	}
	
	// Trap focus function
	function trapFocus(element, elementOutOfTrap) {
		var focusableEls = element.querySelectorAll('a[href]:not([disabled]), button:not([disabled]), textarea:not([disabled]), input[type="text"]:not([disabled]), input[type="radio"]:not([disabled]), input[type="checkbox"]:not([disabled]), select:not([disabled])'),
			firstFocusableEl = focusableEls[0],
			lastFocusableEl = focusableEls[focusableEls.length - 1],
			KEYCODE_TAB = 9;

		element.addEventListener('keydown', function(e) {
			var isTabPressed = (e.key === 'Tab' || e.keyCode === KEYCODE_TAB);

			if (!isTabPressed) { 
				return; 
			}

			if (document.activeElement === lastFocusableEl) {
				if (elementOutOfTrap === undefined) {
					firstFocusableEl.focus();
				} else {
					elementOutOfTrap.focus();
				}
				e.preventDefault();
			}

		});
	}

	trapFocus( document.querySelector('.mobile-nav'), document.querySelector('.menu-btn-mobile') );
	
	// For all links that only have text
	$(window).on('load', function() {
		if( $("a[data-region-style='button']").length ) {} else { 
			$('a:not(:has(*))').each(function(){
				$(this).wrapInner('<span></span>');
			});
		}
	});
	
		
	//Select current page anchor in mobile site nav
     $("nav.mobile-nav a").each(function (){
        if($(this).attr('href') == window.location.pathname)
            $(this).addClass('selected');
        else if(window.location.pathname.match(/[\/]*$/) &&
                $(this).attr('href') == (window.location.pathname + 'index.php'))
            $(this).addClass('selected');
    });
	
	// Show search (mobile)
	$(".search-btn-mobile").on("click", function(e){
		e.preventDefault();
        var $searchForm = $('#search');
		
		if( $searchForm.is(":hidden") ) {
			$searchForm.stop().slideToggle('fast')
					.find('.search-input').focus();
		} else {
			$searchForm.stop().slideToggle('fast');
		}
    });
	
	// Add focus/hover class for search
	$('#search-desktop').on('focusin', ".search-input", function() {
		$(this).parent().addClass('hover');
	}).on('focusout', ".search-input", function () {
		$(this).parent().removeClass('hover');
	});
	
	// Expand/Collapse mobile nav items
    $(".plus").on("click", function(){
        $(this).toggleClass("plus minus").siblings('ul').stop().slideToggle();
		$(this).attr('aria-expanded', function (i, attr) {
            return attr == 'true' ? 'false' : 'true'
        });
		if( $(this).closest(".mobile-nav").length>0 ) {
            $(this).attr('aria-label', function (i, attr) {
                return attr == 'expand section' ? 'collapse section' : 'expand section'
            });
        }
    });
	
	// Add aria attributes for accessibility on expand/collapse
    $( ".js-tab-target" ).each(function( index ) {
        var i = index + 1;
        if ( $(this).hasClass('accordion-summary') ) {
            $(this).find('span').first().attr("id","accordion-header"+i);
        } else {
            $(this).closest("li").find("span").attr("id","accordion-header"+i);
        }
        $(this).attr({
            "aria-controls":"accordion-content"+i,
            "aria-expanded": "false"
        });
        $(this).next().attr({
            "id": "accordion-content"+i,
            "aria-labelledby": "accordion-header"+i
        });	
    });
		
	// Expand/Collapse for content pages
        //expand or collapse all boxes
    var sum = '.accordion-summary';
    $(".accordion-expand").click(function(){
        $(this).text($(this).text() === "Collapse All" ? "Expand All" : "Collapse All");
        if($(this).hasClass("expand-all")){
            $(this).toggleClass("expand-all collapse-all").nextAll('.accordion-details').addClass('opened');
            $(this).nextAll(sum).addClass('selected').attr('aria-expanded', 'true');
        }
        else {
            $(this).toggleClass("expand-all collapse-all").nextAll('.accordion-details').removeClass('opened');
            $(this).nextAll(sum).removeClass('selected').attr('aria-expanded', 'false');
        }
    });
    $(sum).on("click", function(){
        $(this).next().toggleClass('opened');
        $(this).toggleClass('selected');
		$(this).attr('aria-expanded', function (i, attr) {
			return attr == 'true' ? 'false' : 'true'
		});
    });
	
// Show Menu for Desktop 
if (!Modernizr.touch) {
    $(".gateways-wrapper").on("hover", function(){
        $('.menu').toggleClass('is-opened');
    });
	$('.menu-btn').on('focus', function() {
		$('.menu').toggleClass('is-opened');
	});
} else {
    $(".gateways-wrapper").on('click', function(){
        $('.menu').stop().toggleClass('is-opened');
    });
}
	
// Accessibility
$('.gateways-wrapper').on("focusin", ".menu-list > li", function() {
	$('.menu').addClass('is-opened');
}).on("focusout", function(e) {
	$('.menu').removeClass('is-opened');
});

<!-- Mobile Navigation -->
	
	 $("#toggle").click(function(){
		$("#mobilenav").stop().slideToggle('slow');
	  });
	  
	  $('#toggle').toggle(function () {
		$("#toggle").removeClass("expand").addClass('collapse');
	}, function () {
		$("#toggle").removeClass("collapse").addClass('expand');
	});


<!-- Global footer Navigation expand collapse -->	

 $("#footer-menu").click(function (event) {
	  event.preventDefault();
	  $("#sitemap").stop().slideToggle("slow");
 });
 
 $("#footer-menu").click(function () {
	 $(".closed, .open").toggleClass("open closed");
 });



<!-- Breadcrumbs -->

	jQuery("#breadCrumb").jBreadCrumb();
	

	<!-- Hook up the FlexSlider -->
	
// 	if ($('.flexslider').length > 0){	
// 		$(window).load(function() {
		
// 			$('.flexslider').flexslider({
// 			animation: "fade",              //String: Select your animation type, "fade" or "slide"
// 			slideDirection: "horizontal",   //String: Select the sliding direction, "horizontal" or "vertical"
// 			slideshow: false,                //Boolean: Animate slider automatically
// 			directionNav: false,             //Boolean: Create navigation for previous/next navigation? (true/false)
// 			controlNav: true,               //Boolean: Create navigation for paging control of each clide? Note: Leave true for manualControls usage
// 			keyboardNav: true,              //Boolean: Allow slider navigating via keyboard left/right keys
// 			mousewheel: false,              //Boolean: Allow slider navigating via mousewheel
// 			prevText: "Previous",           //String: Set the text for the "previous" directionNav item
// 			nextText: "Next",               //String: Set the text for the "next" directionNav item
// 			pausePlay: false,               //Boolean: Create pause/play dynamic element
// 			pauseText: 'Pause',             //String: Set the text for the "pause" pausePlay item
// 			playText: 'Play',               //String: Set the text for the "play" pausePlay item
// 			randomize: true,               //Boolean: Randomize slide order
// 			slideToStart: 0,                //Integer: The slide that the slider should start on. Array notation (0 = first slide)
// 			animationLoop: true,            //Boolean: Should the animation loop? If false, directionNav will received "disable" classes at either end
// 			controlsContainer: ".flex-container",          //Selector: Declare which container the navigation elements should be appended too. Default container is the flexSlider element. Example use would be ".flexslider-container", "#container", etc. If the given element is not found, the default action will be taken.
// 			manualControls: ".custom-controls li a",             //Selector: Declare custom control navigation. Example would be ".flex-control-nav li" or "#tabs-nav li img", etc. The number of elements in your controlNav should match the number of slides/tabs.
// 			});
			
// 		});
// 		}

// if ($('.flexslider').length > 0){
// 	$('.content-slider').flexslider({
// 				animation: "slide",
// 				directionNav:false,
// 				pauseOnHover: true
// 	});
// }


// Calculate height of tallest caption then inject height inline
if ($(window).width() < 768) {
	var maxHeight = 0;

   $('.flex-caption, .content-slider .flex-caption').each(function() {
       maxHeight = maxHeight > $(this).height() ? maxHeight : $(this).height();
	   $(this).css('min-height', maxHeight + 'px');
   });
	
}
	
// Add class to media callouts
$('.lightbox-video, .callout img').closest('.callout').addClass('mod-media')
	
// Initialize Fancybox
jQuery.fn.extend({
	renameAttr: function(name, newName, removeData) {
		var val;
		return this.each(function() {
			val = jQuery.attr(this, name);
			jQuery.attr(this, newName, val);
			jQuery.removeAttr(this, name);
			// move original data
			if (removeData !== false) {
				jQuery.removeData(this, name.replace('data-', ''));
			}
		});
	}
});

var fancyboxItems = '.fancybox, a.lightbox-img, span.lightbox-img a, .fancybox-buttons';

$(fancyboxItems).renameAttr("rel", "data-fancybox");
$(fancyboxItems).renameAttr("data-fancybox-group", "data-fancybox");
$(fancyboxItems).renameAttr("title", "data-caption");

var updatefc = function(instance, current) {
	var $fc = current.$fc;
}

if ($(fancyboxItems).length > 0) {
	$(fancyboxItems).fancybox({
		preventCaptionOverlap: false,
		wheel: false,
		idleTime: false,
		infobar: true,
		caption: $.noop,
		afterLoad : function(instance, current) {
			var caption = current.opts.$orig.data('caption') || '';
			current.$fc = $('<div class="fancybox-custom-caption">' + caption + '</div>').appendTo(current.$content);
			
			updatefc(instance, current);
		},
		onUpdate: function(instance, current) {
			updatefc(instance, current);	
		},
		mobile: {
			clickSlide: "close",
		}
	});
}

if ($('.lightbox-video').length > 0) {
	if( $('.lightbox-video').is("[href*='you']") || $('.lightbox-video').is("[href*='vimeo']") ) {
		$('.lightbox-video').fancybox({
			idleTime: false,
			youtube : {
				autoplay: 1
			}
		});
	} else {
		$('.lightbox-video').fancybox({
			type: 'iframe',
			idleTime: false
		});
	}
}
	
/* Initialize Data Table Sorter */
	
    if ($('table.display:not([id])').length > 0) {
        $(function() {
            $.urlParam = function(name){
                var results = new RegExp('[\\?&]' + name + '=([^&#]*)').exec(window.location.href);
                if (!results)
                {
                    return;
                }
                return decodeURIComponent(results[1] || "");
            }

            var ts = $('table.display');
            for (i=0; i < ts.length; i++) {
                ts[i].id = "DataTables_Table_" + i;

                var oTable = $('#DataTables_Table_' + i).DataTable({
                    "dom": "Rf<\"#reset-table" + i + "\">rtpil",
                    "autoWidth": false,
					"pageLength": 25,
					"pagingType": "full_numbers",
                    "columnDefs": [
                        { orderable: false, aTargets: ['noSort'] },  // Disable sorting on columns marked as so
						{ visible: false, aTargets: ['dt-hidden-column'] }
                    ],
					"order": [[ 0, "asc" ]],
                    "language": {
                        "search": "Search: "
                    },
                    "search": {"search": $.urlParam('search')}
                });	
                $("#reset-table" + i).html('<span id="reset-table-btn' + i +'" class="reset-table"><a href="#">Reset Table</a></span>');
                $("#DataTables_Table_" + i + "_filter input").attr("placeholder", "type keywords to filter table results");
                getResetClick(i);
            }

            function getResetClick(i)
            {
                var input = $("#DataTables_Table_" + i + "_filter input");
                $("#reset-table-btn" + i).on( "click", function(event) {
                    event.preventDefault()
                    var oTable =  $('#DataTables_Table_' + i).DataTable();
                    input.val('').keyup();
                    oTable.order([ 0, 'asc' ]).draw();
                });

                if ( input.val() != '' ) {
                    $("#reset-table" + i).show();
                } else {
                    $("#reset-table" + i).hide();
                }

                $('#DataTables_Table_' + i + ' th').on( "click", function() {
                    $("#reset-table" + i).show();
                });

                input.on({
                    keydown: function() {
                        $("#reset-table" + i).show();
                    },
                    keyup: function() {
                        if ( input.val() == '' ) {
                            $("#reset-table" + i).hide();
                        }
                    }  
                });
            }
        });
    }
	
	/* Add Directory headers for Unit directory snippet */
	if( $("table.mod-directory-snippet").length > 0 ) {
		$("<style>")
			.prop("type", "text/css")
			.html('\
					@media only screen and (max-width: 960px) {\
						table.dataTable td:nth-of-type(1):before { content: "Name"; }\
						table.dataTable td:nth-of-type(2):before { content: "Title"; }\
						table.dataTable td:nth-of-type(3):before { content: "Phone"; }\
						table.dataTable td:nth-of-type(4):before { content: "Email"; }\
					}\
			')
			.appendTo("head");
	}

	if ( $("table.mod-directory-snippet.mod-admissions").length > 0 ) {
		$("<style>")
			.prop("type", "text/css")
			.html('\
					@media only screen and (max-width: 960px) {\
						table.dataTable td:nth-of-type(2):before { content: "Territory"; }\
					}\
			')
			.appendTo("head");
	}
	
	/* Add presenation role to faculty/staff profile page table for accessibility */
	$('#contact table').attr('role', 'presentation');

	/* Increment numbered class for responsive tables */
	$('table.regular').each(function(index, elem) {
		var i = index + 1;
		$(this).addClass('regular-' + i);
	});
	
	/* Make LiveChat button not fixed when scrolling and adjust width when resized */
	var $liveChat = $('.livechat_button');
	if ($liveChat.length > 0) {	
		$(window).resize(function() {
			if ( $(window).width() > 767 ) {
				var mainNavWidth = $('#mainnav').width();
				$liveChat.css('width', mainNavWidth + 'px');
			}
		}).resize();

		$.fn.isOnScreen = function(){
			var win = $(window);
			var viewport = {
				top : win.scrollTop(),
				left : win.scrollLeft()
			};
			viewport.right = viewport.left + win.width();
			viewport.bottom = viewport.top + win.height();

			var bounds = this.offset();
			bounds.right = bounds.left + this.outerWidth();
			bounds.bottom = bounds.top + this.outerHeight();

			return (!(viewport.right < bounds.left || viewport.left > bounds.right || viewport.bottom < bounds.top || viewport.top > bounds.bottom));
		};

		$(window).scroll(function() {
			if ( $(window).width() > 767 && $('#inner').isOnScreen() ) {
				$liveChat.addClass('is-not-fixed');
			} else if( !$('#logo-footer').isOnScreen() ) {
				$liveChat.removeClass('is-not-fixed');
			}
		}).scroll();
	}
	
	// Fleslider for callouts mainly on blogs
    (function() {
        var centerControls = function() {
            var imgHeight = $('.callout.mod-slider img').height();
            $('.flex-direction-nav').css('height', imgHeight);
        };
        $(window).resize(centerControls);
        $('.callout.mod-slider .sub-text').prepend('Image <span class=\"current-slide\"></span> of <span class=\"total-slides\"></span> - ');
        var $currentSlide = $('.current-slide');
        var $totalSlides = $('.total-slides');
        if($('.callout.mod-slider .flexslider').length > 0) {
            $('.callout.mod-slider .flexslider').flexslider({
                slideshow: false,
                controlNav: false,
				animationLoop: false,
                start: function(slider){
                    $(slider).find($currentSlide).html(slider.currentSlide+1);
                    $(slider).find($totalSlides).html(slider.count);
                    centerControls();
                },
                after: function(slider){
                    $(slider).find($currentSlide).html(slider.currentSlide+1);
                    $(slider).find($totalSlides).html(slider.count);
                }
            });
        }
    })();
    
   /*
    * Grab all iframes on the page or return
    */
    function vidRatio() {

        var iframes = document.getElementsByTagName( 'iframe' );

       /*
        * Loop through the iframes array
        */
        for ( var i = 0; i < iframes.length; i++ ) {

            var iframe = iframes[i],

           /*
            * RegExp, extend this if you need more players
            */
            players = /www.youtube.com|player.vimeo.com/;

           /*
            * If the RegExp pattern exists within the current iframe
            */
            if ( iframe.src.search( players ) > 0 ) {

               /*
                * Calculate the video ratio based on the iframe's w/h dimensions
                */
                var videoRatio        = ( iframe.height / iframe.width ) * 75;

               /*
                * Replace the iframe's dimensions and position
                * the iframe absolute, this is the trick to emulate
                * the video ratio
                */
                iframe.style.position = 'absolute';
                iframe.style.top      = '0';
                iframe.style.left     = '0';
                iframe.width          = '100%';
                iframe.height         = '100%';

               /*
                * Wrap the iframe in a new <div> which uses a
                * dynamically fetched padding-top property based
                * on the video's w/h dimensions
                */
                var wrap              = document.createElement( 'div' );
                wrap.className        = 'fluid-vids';
                wrap.style.width      = '100%';
                wrap.style.position   = 'relative';
                wrap.style.paddingTop = videoRatio + '%';

               /*
                * Add the iframe inside our newly created <div>
                */
                var iframeParent      = iframe.parentNode;
                iframeParent.insertBefore( wrap, iframe );
                wrap.appendChild( iframe );

            }

        }
    }
    
    vidRatio();
    
    if ($('.lazyload-video').length > 0) {
        $('.lazyload-video').lazyload({
            load: vidRatio,
            trigger: 'click'
        });
    }
	
	// Check if regional sites have carolina alert
	if (  $("link[href='/_global_resources/regional_campuses/css/regional.css']").length ) {
		$('.main-header').parent().addClass('regional-header');
	}
});				      
	
